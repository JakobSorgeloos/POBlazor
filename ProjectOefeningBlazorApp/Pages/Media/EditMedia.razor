@page "/Editmedia/{Id}"


@inject MediaService mediaService
@inject NavigationManager NavigationManager

    <h2>Edit Media</h2>
    <hr />

    <form>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label for="Url" class="control-label">Url</label>
                    <input form="Url" class="form-control" @bind="@vmForm.Url" />
                </div>
                <div class="form-group">
                    <label for="Title" class="control-label">Title</label>
                    <input form="Title" class="form-control" @bind="@vmForm.Title" />
                </div>
                <div class="form-group">
                    <label for="MediaType" class="control-label">Media Type</label>
                    <input form="MediaType" disabled class="form-control" value="@vmForm.MediaType" />
                   </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                        <label class="form-check-label" for="IsPublic" @bind-="@vmForm.IsPublic">
                            Public
                        </label>
                    </div>
                </div>



            </div>
        

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" class="btn btn-primary" @onclick="@CreateMedia" value="Save" />
                    <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
                    <a class="btn btn-primary" href="Delete/@vmForm.Key">
                        <span class="oi oi-trash" aria-hidden="true">Delete</span>
                    </a>
                </div>
            </div>
        </div>
    </form>
@code {
    [Parameter]
    public string Id { get; set; }

    EditMediaViewModel vmForm = new EditMediaViewModel();
    protected override async Task OnInitializedAsync()
    {
        vmForm = await Task.Run(() => mediaService.ConvertMediaToEditVm(Convert.ToInt32(Id)));
    }
    protected async void CreateMedia()
    {
       await mediaService.UpdateMedia(Convert.ToInt32(Id),vmForm);
        NavigationManager.NavigateTo("media");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("media");
    }

    }
