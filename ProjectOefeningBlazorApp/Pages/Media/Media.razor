@page "/media"


@inject MediaService mediaService


<NavLink class="nav-link" href="AddMedia">
    <span class="oi oi-plus" aria-hidden="true"></span>
    Add New Media
</NavLink>

<h1>MediaList</h1>

<div class="card-deck">
    @if (MediaList is null)
    {
        <p><em>Loading...!</em></p>
    }

    else
    {
        foreach (var item in MediaList)
        {

            <div class="col-lg-4 d-flex d-block align-items-lg-stretch">
                <div class="card mt-5 ">
                    <div class="card-header">
                        <ul class="nav nav-pills card-header-pills">
                            <li class="nav-item ">
                                <a class="nav-link" href="Details/@item.Key"><span class="oi oi-info" aria-hidden="true"></span> Details</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="Editmedia/@item.Key"><span class="oi oi-pencil" aria-hidden="true"></span> Edit</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#" tabindex="-1">Disabled</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body  embed-responsive embed-responsive-16by9">
                        <iframe class="embed-responsive-item" src="@item.EmbeddedUrl" title="@item.Title"></iframe>
                    </div>
                    <p class="card-text"><small class="text-muted">@item.Title</small></p>
                </div>

            </div>



        }
    }
</div>
@code {

    List<MediaViewModel> MediaList = new List<MediaViewModel>();
    protected override async Task OnInitializedAsync()
    {
        MediaList = await Task.Run(() => mediaService.GetAllMediaViewModels());
    }


}
